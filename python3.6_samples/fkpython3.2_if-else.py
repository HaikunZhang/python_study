#!/usr/bin/env python
# -*- coding:utf-8 -*-


##################################################################
# 练习5. 面试题 - 蛇型矩阵
# 当 N = 4:       当 N = 5:
# 01 12 11 10      01 16 15 14 13
# 02 13 16 09      02 17 24 23 12
# 03 14 15 08      03 18 25 22 11
# 04 05 06 07      04 19 20 21 10
#                  05 06 07 08 09
##################################################################

# 解题思路分析：
# 1. 根据需求分析程序模型  —— 二维数组、从外圈到内圈、逆时针、递增打印数字、打印范围是给定的N*N的矩阵
# 2. 找出关键数据，用变量来保存数据
#   二维数组：用来打印数组 ——array；
#   外圈到内圈、逆时针：还需要一个变量来控制循环方向 ——orient
#   递增打印数字： for-in 循环
#   N * N 矩阵： 二维矩阵 、print的格式化输出

N = int(input("请输入数组的范围："))

# 1.创建一个二维数组：
array = [[0] * N]   # 注意这里不能使用 [[0] * N]* N ，因为最后一个N相当于把前面的部分复制了一遍，会导致每行的内容都一模一样
for i in range(N - 1):
    array += [[0] * N]


# 2. 使用一个变量来控制数字递增的方向：
orient = 0

# 3.将数字递增填入数组：
j, k = 0, 0
for i in range(1, N * N + 1):
    array[j][k] = i
# 判断转向：
    if j + k == N - 1:  # 右对角线
        if j > k:   # 数组的左半部分，所以向右转
            orient = 1
        else:       # 数组的右半部分，所以向左转
            orient = 3
    elif j == k and j >= N / 2:   # 数组的右下半部分，向上转
            orient = 2
    elif j + 1 == k and k <= N / 2:   # 数组左上半部分，向下转
            orient = 0

    if orient == 0:  # 0 向下
        j += 1
    elif orient == 1:  # 1 向右
        k += 1
    elif orient == 2:  # 2 向上
        j -= 1
    elif orient == 3:  # 3 向左
        k -= 1

# 打印array
for ele in array:
    for i in ele:
        print("%03d" % i, end=" ")
    print(" ")
